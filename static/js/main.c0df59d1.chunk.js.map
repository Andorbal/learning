{"version":3,"sources":["math/flashCards/Question.jsx","math/flashCards/Result.jsx","math/flashCards/Addition.jsx","math/Math.jsx","App.js","reportWebVitals.js","index.js"],"names":["Question","operator","left","right","onAnswer","React","useState","value","setValue","Form","Control","type","onChange","evt","target","Button","onClick","parseInt","Result","result","expected","onDone","useEffect","timeout","setTimeout","clearTimeout","getRandomInt","max","Math","floor","random","createQuestion","Addition","question","setQuestion","state","setState","setResult","x","path","to","App","className","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0df59d1.chunk.js","sourcesContent":["import React from \"react\";\nimport {Button, Form} from \"react-bootstrap\"\n\nconst Question = ({operator, left, right, onAnswer}) => {\n  const [value, setValue] = React.useState();\n\nreturn (\n<div>\n  {left} {operator} {right} = \n  <Form.Control type=\"number\" value={value} onChange={evt => setValue(evt.target.value)} />\n  <Button onClick={() => onAnswer(parseInt(value))}>Answer</Button>\n</div>)\n}\n\nexport default Question;\n","import React from \"react\";\n\nconst Result = ({result, expected, onDone}) => {\n  React.useEffect(() => {\n    const timeout = setTimeout(onDone, 3000);\n\n    return () => clearTimeout(timeout);\n  })\n\n  return <div>{result === expected ? \"RIGHT!!!!\" : \"Wrong :(\" }</div>\n}\n\nexport default Result;\n","import React from \"react\";\nimport Question from \"./Question\";\nimport Result from \"./Result\";\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nconst createQuestion = () => {\n  const left = getRandomInt(12);\n  const right = getRandomInt(12);\n\n  return ({left, right, operator: \"+\", result: left + right})\n};\n\nconst Addition = () => {\n  const [question, setQuestion] = React.useState(createQuestion());\n  const [state, setState] = React.useState(\"question\");\n  const [result, setResult] = React.useState(0);\n\n  switch (state) {\n    case \"question\":\n      return <Question left={question.left} right={question.right} operator={question.operator} onAnswer={x => {setResult(x); setState(\"result\");}} />\n    case \"result\":\n      return <Result result={result} expected={question.result} onDone={() => {setQuestion(createQuestion()); setState(\"question\");}} />\n      default:\n        return <div>You shouldn't see this...</div>\n  }\n}\n\nexport default Addition;\n","import React from \"react\";\nimport {Link, Route, Switch} from \"react-router-dom\"\nimport Addition from \"./flashCards/Addition\";\n\nconst Math = () => \n  <Switch>\n    <Route path=\"#math/flash/addition\">\n      <Addition />\n    </Route>\n    <Route path=\"#math\">\n      <Link to=\"#math/flash/addition\">Addition flash cards</Link>\n    </Route>\n  </Switch>\n\nexport default Math;\n","import { Route, Switch, Users } from \"react-router-dom\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport \"./App.css\";\nimport Math from \"./math/Math\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#\">Learning!</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#\">Home</Nav.Link>\n            <Nav.Link href=\"#math\">Math</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Switch>\n        <Route path=\"#math\">\n          <Math />\n        </Route>\n        <Route path=\"#\">\n          <div>Choose a subject</div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}